@model SUN2.Models.Lehrstuhl
@Styles.Render("~/Content/css")
@{
    ViewBag.Title = "Lehrstuhl bearbeiten";
}

@if (Request.IsAuthenticated)
{

    

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.verantwortlicher)
        @Html.HiddenFor(model => model.lehrstuhlid)

        <div id="Anlegen-box" style="width: 450px">


            <h2>Lehrstuhl bearbeiten</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <label class="col-sm-3">Bezeichnung:</label>

            <div class="col-sm-9">
                @Html.EditorFor(model => model.bezeichnung, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bezeichnung, "", new { @class = "text-danger" })

            </div>
            <label class="col-sm-3">Beschreibung:</label>

            <div class="col-sm-9">
                @Html.EditorFor(model => model.beschreibung, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.beschreibung, "", new { @class = "text-danger" })

            </div>

            <label class="col-sm-3">Sichtbarkeit:</label>

            <div class="col-sm-9">

                @Html.DropDownListFor(model => model.privat, new List<SelectListItem>() { new SelectListItem() { Text = "Privat", Value = "True" }, new SelectListItem() { Text = "Öffentlich", Value = "False" } })
                @Html.ValidationMessageFor(model => model.privat, "", new { @class = "text-danger" })
            </div>


            <br />
            <br />

            <input type="submit" value="Speichern" class="button" style="width: 100%; max-width: 100%">
        </div>



    }

    <div style="text-align:center">
        @Html.ActionLink("Zurück", "Index", null, new { @class = "btn btn-primary" })
    </div>


}
else
{
    Response.Redirect("/Error/NotLoggedIn");
}
